diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x'*\.o' -x '*\.pyc' zlib-1.2.11.orig/cmake/modules/FindWcecompat.cmake zlib-1.2.11/cmake/modules/FindWcecompat.cmake
--- zlib-1.2.11.orig/cmake/modules/FindWcecompat.cmake	1970-01-01 01:00:00.000000000 +0100
+++ zlib-1.2.11/cmake/modules/FindWcecompat.cmake	2018-03-15 09:55:22.642804900 +0100
@@ -0,0 +1,33 @@
+# Try to find Wcecompat functionality
+# Once done this will define
+#
+#  WCECOMPAT_FOUND - system has Wcecompat
+#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory
+#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat
+#
+# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+  set(Wcecompat_FIND_QUIETLY TRUE)
+endif(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+
+find_path(WCECOMPAT_INCLUDE_DIR errno.h PATH_SUFFIXES wcecompat)
+
+set(WCECOMPAT_LIB_FOUND FALSE)
+
+if(WCECOMPAT_INCLUDE_DIR)
+    find_library(WCECOMPAT_LIBRARIES NAMES wcecompat wcecompatex )
+    if(WCECOMPAT_LIBRARIES)
+      set(WCECOMPAT_LIB_FOUND TRUE)
+    endif(WCECOMPAT_LIBRARIES)
+endif(WCECOMPAT_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(WCECOMPAT_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Wcecompat  DEFAULT_MSG  WCECOMPAT_LIBRARIES  WCECOMPAT_LIB_FOUND)
+
+mark_as_advanced(WCECOMPAT_INCLUDE_DIR  WCECOMPAT_LIBRARIES  WCECOMPAT_CONST  WCECOMPAT_LIB_FOUND)
diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x'*\.o' -x '*\.pyc' zlib-1.2.11.orig/CMakeLists.txt zlib-1.2.11/CMakeLists.txt
--- zlib-1.2.11.orig/CMakeLists.txt	2017-01-15 18:29:40.000000000 +0100
+++ zlib-1.2.11/CMakeLists.txt	2018-03-15 09:55:22.647804800 +0100
@@ -1,8 +1,15 @@
-cmake_minimum_required(VERSION 2.4.4)
+cmake_minimum_required(VERSION 2.6)
 set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)

+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules)
+
 project(zlib C)

+if(WINCE)
+    find_package(Wcecompat REQUIRED)
+    include_directories(${WCECOMPAT_INCLUDE_DIR})
+endif(WINCE)
+
 set(VERSION "1.2.11")

 option(ASM686 "Enable building i686 assembly implementation")
@@ -14,6 +21,8 @@
 set(INSTALL_MAN_DIR "${CMAKE_INSTALL_PREFIX}/share/man" CACHE PATH "Installation directory for manual pages")
 set(INSTALL_PKGCONFIG_DIR "${CMAKE_INSTALL_PREFIX}/share/pkgconfig" CACHE PATH "Installation directory for pkgconfig (.pc) files")

+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
+
 include(CheckTypeSize)
 include(CheckFunctionExists)
 include(CheckIncludeFile)
@@ -24,6 +33,7 @@
 check_include_file(stdint.h    HAVE_STDINT_H)
 check_include_file(stddef.h    HAVE_STDDEF_H)

+set(CMAKE_DEBUG_POSTFIX)
 #
 # Check to see if we have large file support
 #
@@ -60,7 +70,7 @@
 check_include_file(unistd.h Z_HAVE_UNISTD_H)

 if(MSVC)
-    set(CMAKE_DEBUG_POSTFIX "d")
+#    set(CMAKE_DEBUG_POSTFIX "d")
     add_definitions(-D_CRT_SECURE_NO_DEPRECATE)
     add_definitions(-D_CRT_NONSTDC_NO_DEPRECATE)
     include_directories(${CMAKE_CURRENT_SOURCE_DIR})
@@ -188,6 +198,10 @@
 set_target_properties(zlib PROPERTIES DEFINE_SYMBOL ZLIB_DLL)
 set_target_properties(zlib PROPERTIES SOVERSION 1)

+if(WINCE)
+    target_link_libraries(zlib ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
 if(NOT CYGWIN)
     # This property causes shared libraries on Linux to have the full version
     # encoded into their final filename.  We disable this on Cygwin because
@@ -199,7 +213,7 @@
     set_target_properties(zlib PROPERTIES VERSION ${ZLIB_FULL_VERSION})
 endif()

-if(UNIX)
+if(UNIX OR MINGW)
     # On unix-like platforms the library is almost always called libz
    set_target_properties(zlib zlibstatic PROPERTIES OUTPUT_NAME z)
    if(NOT APPLE)
@@ -230,12 +244,14 @@
 # Example binaries
 #============================================================================

+if(NOT WINCE)
 add_executable(example test/example.c)
 target_link_libraries(example zlib)
 add_test(example example)

 add_executable(minigzip test/minigzip.c)
 target_link_libraries(minigzip zlib)
+endif(NOT WINCE)

 if(HAVE_OFF64_T)
     add_executable(example64 test/example.c)
@@ -247,3 +263,7 @@
     target_link_libraries(minigzip64 zlib)
     set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS "-D_FILE_OFFSET_BITS=64")
 endif()
+
+
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/zlib.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/zlib.pc @ONLY)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/zlib.pc DESTINATION lib/pkgconfig)
diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x'*\.o' -x '*\.pyc' zlib-1.2.11.orig/win32/zlib1.rc zlib-1.2.11/win32/zlib1.rc
--- zlib-1.2.11.orig/win32/zlib1.rc	2017-01-15 18:07:08.000000000 +0100
+++ zlib-1.2.11/win32/zlib1.rc	2018-03-15 09:55:22.649804700 +0100
@@ -10,9 +10,9 @@
   PRODUCTVERSION	ZLIB_VER_MAJOR,ZLIB_VER_MINOR,ZLIB_VER_REVISION,0
   FILEFLAGSMASK		VS_FFI_FILEFLAGSMASK
 #ifdef _DEBUG
-  FILEFLAGS		1
+  FILEFLAGS		0x1L
 #else
-  FILEFLAGS		0
+  FILEFLAGS		0x0L
 #endif
   FILEOS		VOS__WINDOWS32
   FILETYPE		VFT_DLL
diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x'*\.o' -x '*\.pyc' zlib-1.2.11.orig/zlib.pc.cmake zlib-1.2.11/zlib.pc.cmake
--- zlib-1.2.11.orig/zlib.pc.cmake	1970-01-01 01:00:00.000000000 +0100
+++ zlib-1.2.11/zlib.pc.cmake	2018-03-15 09:56:10.912229100 +0100
@@ -0,0 +1,13 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=${prefix}
+libdir=${prefix}/lib
+sharedlibdir=${prefix}/lib
+includedir=${prefix}/include
+
+Name: zlib
+Description: zlib compression library
+Version: @ZLIB_FULL_VERSION@
+
+Requires:
+Libs: -L${libdir} -L${sharedlibdir} -lz
+Cflags: -I${includedir}
