diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x'*\.o' akonadi-17.12.0.orig/src/core/connection.cpp akonadi-17.12.0/src/core/connection.cpp
--- akonadi-17.12.0.orig/src/core/connection.cpp	2017-12-04 17:40:18.000000000 +0100
+++ akonadi-17.12.0/src/core/connection.cpp	2018-01-09 22:26:11.008743600 +0100
@@ -125,7 +125,20 @@
                                      << XdgBaseDirs::homePath("config") << "nor in any of"
                                      << XdgBaseDirs::systemPathList("config");
         }
+
+        // TODO: share socket setup with server
         const QSettings connectionSettings(connectionConfigFile, QSettings::IniFormat);
+#ifdef Q_OS_WIN
+        // use the installation prefix as uid
+        const QString prefix = QString::fromUtf8(QUrl::toPercentEncoding(qApp->applicationDirPath()));
+        if (mConnectionType == CommandConnection) {
+            const QString defaultPipe = QStringLiteral("Akonadi-Cmd-") % prefix;
+            serverAddress = connectionSettings.value(QStringLiteral("Connection/NamedPipe"), defaultPipe).toString();
+        } else if (mConnectionType == NotificationConnection) {
+            const QString defaultPipe = QStringLiteral("Akonadi-Ntf-") % prefix;
+            serverAddress = connectionSettings.value(QStringLiteral("Connection/NtfNamedPipe"), defaultPipe).toString();
+        }
+#else
         const QString defaultSocketDir = StandardDirs::saveDir("data");
 
         if (mConnectionType == CommandConnection) {
@@ -135,6 +148,7 @@
             const QString defaultSocketPath = defaultSocketDir % QStringLiteral("/akonadiserver-ntf.socket");
             serverAddress = connectionSettings.value(QStringLiteral("Notifications/UnixPath"), defaultSocketPath).toString();
         }
+#endif
     }
 
     // create sockets if not yet done, note that this does not yet allow changing socket types on the fly
diff -Nrub -x '*~' -x '*\.rej' -x '*\.orig' -x'*\.o' akonadi-17.12.0.orig/src/server/akonadi.cpp akonadi-17.12.0/src/server/akonadi.cpp
--- akonadi-17.12.0.orig/src/server/akonadi.cpp	2017-12-04 17:40:18.000000000 +0100
+++ akonadi-17.12.0/src/server/akonadi.cpp	2018-01-09 22:26:11.024386000 +0100
@@ -56,11 +56,6 @@
 #include <QTimer>
 #include <QDBusServiceWatcher>
 
-#ifdef Q_OS_WIN
-#include <windows.h>
-#include <sddl.h>
-#endif
-
 using namespace Akonadi;
 using namespace Akonadi::Server;
 
@@ -127,40 +122,11 @@
     // own thread
     connect(mNtfServer, QOverload<quintptr>::of(&AkLocalServer::newConnection), mNotificationManager, &NotificationManager::registerConnection);
 
+    // TODO: share socket setup with client
 #ifdef Q_OS_WIN
-    HANDLE hToken = NULL;
-    PSID sid;
-    QString userID;
-
-    OpenProcessToken(GetCurrentProcess(), TOKEN_READ, &hToken);
-    if (hToken) {
-        DWORD size;
-        PTOKEN_USER userStruct;
-
-        GetTokenInformation(hToken, TokenUser, NULL, 0, &size);
-        if (ERROR_INSUFFICIENT_BUFFER == GetLastError()) {
-            userStruct = reinterpret_cast<PTOKEN_USER>(new BYTE[size]);
-            GetTokenInformation(hToken, TokenUser, userStruct, size, &size);
-
-            int sidLength = GetLengthSid(userStruct->User.Sid);
-            sid = (PSID) malloc(sidLength);
-            CopySid(sidLength, sid, userStruct->User.Sid);
-            CloseHandle(hToken);
-            delete [] userStruct;
-        }
-
-        LPWSTR s;
-        if (!ConvertSidToStringSidW(sid, &s)) {
-            qCCritical(AKONADISERVER_LOG) << "Could not determine user id for current process.";
-            userID = QString();
-        } else {
-            userID = QString::fromUtf16(reinterpret_cast<ushort *>(s));
-            LocalFree(s);
-        }
-        free(sid);
-    }
-
-    const QString defaultCmdPipe = QStringLiteral("Akonadi-Cmd-") % userID;
+    // use the installation prefix as uid
+    const QString prefix = QString::fromUtf8(QUrl::toPercentEncoding(qApp->applicationDirPath()));
+    const QString defaultCmdPipe = QStringLiteral("Akonadi-Cmd-") % prefix;
     const QString cmdPipe = settings.value(QStringLiteral("Connection/NamedPipe"), defaultCmdPipe).toString();
     if (!mCmdServer->listen(cmdPipe)) {
         qCCritical(AKONADISERVER_LOG) << "Unable to listen on Named Pipe" << cmdPipe;
@@ -168,7 +134,7 @@
         return false;
     }
 
-    const QString defaultNtfPipe = QStringLiteral("Akonadi-Ntf-") % userID;
+    const QString defaultNtfPipe = QStringLiteral("Akonadi-Ntf-") % prefix;
     const QString ntfPipe = settings.value(QStringLiteral("Connection/NtfNamedPipe"), defaultNtfPipe).toString();
     if (!mNtfServer->listen(ntfPipe)) {
         qCCritical(AKONADISERVER_LOG) << "Unable to listen on Named Pipe" << ntfPipe;
